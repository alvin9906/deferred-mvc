buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group 'org.maddog'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    appBaseName = 'deferred-mvc'
    appVerNo = '0.1-snapshot'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]

task pathingJar(type: Jar) {
    dependsOn configurations.runtime
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.runtime.files.collect {
                it.toURL().toString().replaceFirst(/file:\/+/, '/')
            }.join(' ')
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

bootRun {
    systemProperties = System.properties
    
    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        dependsOn pathingJar
        doFirst {
            classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
        }
    }
}

test {
    systemProperties = System.properties
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile('org.codehaus.groovy:groovy')
    
    compile("cglib:cglib:3.2.4")

    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-config:1.3.3.RELEASE'
    }
}

jar {
    baseName = "$appBaseName"
    version = null //don't create a jar with version number

    // keep the jar clean
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'

    manifest {
        attributes "Implementation-Title": project.name,
                "Implementation-Version": appVerNo,
                "Build-By": System.getProperty('user.name'),
                "Build-JDK": System.getProperty('java.version'),
                "Build-Time": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    }
}

